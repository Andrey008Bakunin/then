import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.utils.markdown import hbold
from aiogram.client.default import DefaultBotProperties

# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8101923955:AAEkYdACeI3H78tRhQeEtDVSjiEnhIUyrgs"

# –£–∫–∞–∂–∏—Ç–µ ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ (–≤–∞—à Telegram ID)
OWNER_ID = 7496432981  # üîπ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID

# –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ç–∑—ã–≤—ã
PAYMENT_DETAILS = "–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\nüîπ –ö–æ—à–µ–ª–µ–∫: 2200 7010 7876 6976\nüîπ –ë–∞–Ω–∫: –¢-–ë–∞–Ω–∫\nüîπ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '–û–ø–ª–∞—Ç–∞'"
REVIEWS_LINK = "–û—Ç–∑—ã–≤—ã: https://t.me/+GB1kEBqwcoJmNjBi"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))  # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
support_requests = {}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã"), KeyboardButton(text="–û—Ç–∑—ã–≤—ã")],
        [KeyboardButton(text="–°—Ä–æ–∫–∏")],
        [KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã")]
    ],
    resize_keyboard=True
)


@dp.message(Command("start"))
async def start(message: types.Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


@dp.message(F.text == "–†–µ–∫–≤–∏–∑–∏—Ç—ã")
async def send_payment_info(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    await message.answer(PAYMENT_DETAILS)


@dp.message(F.text == "–û—Ç–∑—ã–≤—ã")
async def send_reviews_link(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç–∑—ã–≤—ã"""
    await message.answer(f"–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ—Ç–∑—ã–≤–∞–º–∏ —Ç—É—Ç:\n{REVIEWS_LINK}")


@dp.message(F.text == "–°—Ä–æ–∫–∏")
async def track_investment(message: types.Message):
    """–ù–∞—á–∞–ª–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–∞ (48 —á–∞—Å–æ–≤)"""
    await message.answer("‚úÖ –ï—Å–ª–∏ –≤—ã —Å–¥–µ–ª–∞–ª–∏ –≤–∫–ª–∞–¥, –æ–∂–∏–¥–∞–π—Ç–µ 48 —á–∞—Å–æ–≤.")


@dp.message(F.text == "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã")
async def support_start(message: types.Message):
    """–ù–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    user_id = message.from_user.id
    support_requests[user_id] = True
    await message.answer("üìù üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é (—á–µ–∫) –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≤–º–µ—Å—Ç–µ —Å —Ñ–æ—Ç–æ. –ï—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –Ω–∞—Ä—É—à–µ–Ω - –µ—Å—Ç—å —à–∞–Ω—Å, —á—Ç–æ –¥–µ–Ω—å–≥–∏ –ø—Ä–∏–π–¥—É—Ç –Ω–µ –≤–∞–º.")


@dp.message(F.text | F.photo)
async def forward_to_owner(message: types.Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ñ–æ—Ç–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–ª–∞–¥–µ–ª—å—Ü—É"""
    user_id = message.from_user.id

    if user_id in support_requests:
        del support_requests[user_id]

        caption = f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {hbold(message.from_user.full_name)} ({user_id}):\n\n"
        caption += message.caption if message.caption else message.text if message.text else "–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞"

        if message.photo:
            photo = message.photo[-1].file_id
            await bot.send_photo(OWNER_ID, photo=photo, caption=caption)
        else:
            await bot.send_message(OWNER_ID, caption)

        await message.answer("‚úÖ –í–∞—à–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û–∂–∏–¥–∞–π—Ç–µ –≤—ã–ø–ª–∞—Ç—ã.")


@dp.message(Command("reply"))
async def reply_to_user(message: types.Message):
    """–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if message.from_user.id != OWNER_ID:
        return

    args = message.text.split(maxsplit=2)
    if len(args) < 3:
        await message.answer("‚ö† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /reply user_id –≤–∞—à –æ—Ç–≤–µ—Ç")
        return

    user_id = int(args[1])
    reply_text = args[2]

    try:
        await bot.send_message(user_id, f"üì© –û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n{reply_text}")
        await message.answer("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    except Exception:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")


async def main():
    """–§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())